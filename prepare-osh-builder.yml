---

- name: Prepare OSH builder
  hosts: all
  remote_user: opensuse
  tasks:

    - name: Install libvirt patterns
      become: yes
      zypper:
        update_cache: yes
        type: pattern
        extra_args_precommand: --gpg-auto-import-keys
        name:
          - kvm_server
          - kvm_tools

    - name: Install additional packages
      become: yes
      zypper:
        name:
          - ansible
          - git-core
          - mkisofs

    - name: Enable libvirtd service
      become: yes
      systemd:
        enabled: yes
        state: started
        name: "{{ item }}"
      loop:
        - libvirtd
        - virtlogd
        - virtlockd

    - name: Create default pool
      become: yes
      virt_pool:
        autostart: yes
        command: define
        state: active
        name: default
        xml: "{{ lookup('template', 'default-pool.xml.j2') }}"

    - name: Check cloud image
      become: yes
      shell: virsh vol-info xenial-server-cloudimg-amd64-disk1.img --pool default
      ignore_errors: yes
      register: cloud_image

    - name: Get latest Xenial cloud image
      get_url:
        dest: /tmp
        url: http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
      when: cloud_image is failed

    - name: Get size of cloud image
      stat:
        path: /tmp/xenial-server-cloudimg-amd64-disk1.img
      register:
        xenial_img
      when: cloud_image is failed

    - name: Create empty volume for cloud image
      become: yes
      shell: "virsh vol-create-as default xenial-server-cloudimg-amd64-disk1.img {{ xenial_img.stat.size }} --format raw"
      when: cloud_image is failed

    - name: Upload cloud image to default pool
      become: yes
      shell: "virsh vol-upload xenial-server-cloudimg-amd64-disk1.img /tmp/xenial-server-cloudimg-amd64-disk1.img --pool default"
      when: cloud_image is failed

    - name: Create default network
      become: yes
      virt_net:
        autostart: yes
        command: define
        state: active
        name: default
        xml: "{{ lookup('template', 'default-net.xml.j2') }}"

    - name: Set git settings
      git_config:
        scope: global
        name: "{{ item['name'] }}"
        value: "{{ item['value'] }}"
      loop:
        - name: user.name
          value: 'Nicolas Bock'
        - name: user.email
          value: nicolas.bock@suse.com

    - name: Clone repository
      git:
        dest: "${HOME}/OpenStack-Summit-Shanghai-2019"
        update: yes
        repo: https://github.com/nicolasbock/OpenStack-Summit-Shanghai-2019.git
